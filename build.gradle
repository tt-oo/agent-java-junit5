/*
 * Copyright 2019 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'java-library'

project.ext.releaseMode = project.hasProperty('releaseMode')
def branch = releaseMode ? '5.0.0' : 'develop'
apply from: "https://raw.githubusercontent.com/reportportal/gradle-scripts/$branch/release-commons.gradle"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

if (project.hasProperty('reportDisabledTests')) {
    systemProperty('reportDisabledTests', reportDisabledTests)
}

repositories {
    mavenLocal()
    maven { url "http://dl.bintray.com/epam/reportportal" }
    maven { url "https://jitpack.io" }
    jcenter()
}

project.ext.githubUserName = project.hasProperty('githubUserName') ? githubUserName : ""
project.ext.githubToken = project.hasProperty('githubToken') ? githubToken : ""



processResources {
    filesMatching('agent.properties') {
        expand(project.properties)
    }
}

dependencies {
    api 'com.epam.reportportal:client-java:5.0.18'
    api 'com.google.code.findbugs:jsr305:3.0.2'
    api 'com.epam.reportportal:commons-model:5.0.0'
    api "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"

    testImplementation('com.github.reportportal:agent-java-test-utils:ddcf50ee20')

    testImplementation ('org.junit.platform:junit-platform-runner:1.6.0') {
        exclude module: 'junit'
    }
    testImplementation 'org.junit.platform:junit-platform-launcher:1.6.0'
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testImplementation "org.aspectj:aspectjweaver:1.9.2"
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.mockito:mockito-core:3.2.4'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation ('com.epam.reportportal:logger-java-logback:5.0.1') {
        exclude module: 'client-java'
    }
}

test {
    outputs.upToDateWhen { return false }
    useJUnitPlatform()
    exclude("com/epam/reportportal/junit5/features/**")
    maxParallelForks(5) // it's forks - separate JVMs, should not interfere each other
    forkEvery(1)
    doFirst {
        def weaver = configurations.testRuntimeClasspath.find { it.name.contains("aspectjweaver") }
        jvmArgs += "-javaagent:$weaver"
    }
}

wrapper {
    gradleVersion = '5.4.1'
}

def releaseDependencies = [bintrayUpload, publish]
releaseDependencies.addAll(afterReleaseBuild.getDependsOn())
afterReleaseBuild.setDependsOn(releaseDependencies)
